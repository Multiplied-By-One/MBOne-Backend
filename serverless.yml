service: mbo-backend

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: 
      forceExclude:
        - aws-sdk

  ArouraDB:
    DBClusterIdentifier:
      dev: mbo-db-cluster-dev
      prod: mbo-db-cluster-prod
      default: mbo-db-cluster
    deletionPolicy:
      dev: Delete
      prod: Retain
      default: Retain
    DBDeletionProtection:
      dev: false
      default: true
    DBUpdateReplacePolicy:
      dev: Delete
      prod: Retain
      default: Retain
    logRetention:
      prod: 30
      default: 7
    DBautopause:
      prod: false
      dev: true
      default: true
    
    DBBackupRetentionPeriod:
      prod: 7
      default: 1
    MinTableThroughput:
      default: 1

    MaxTableThroughput:
      default: 2
      dev: 2
      prod: 8

  stage: ${opt:stage, 'localdev'}

  DBClusterARN:
    Fn::Join:
      - ':'
      - - 'arn:aws:rds'
        - Ref: 'AWS::Region'
        - Ref: 'AWS::AccountId'
        - 'cluster'
        - !Ref AuroraDBCluster

  #profiles:
  #  localdev: mbo
    # dev: profile-dev
    # staging: profile-staging
    # prod: profile-prod
  environment:
    default_env: &default_env
      SERVERLESS_SERVICE: ${self:service}
      SERVERLESS_STAGE: ${self:provider.stage}
      SERVERLESS_VERSION: ${file(./package.json):version}
      SERVERLESS_REGION: ${opt:region, self:provider.region}
      DB_CLUSTER_ARN: ${self:custom.DBClusterARN}
      DB_SECRET_ARN: !Ref ClusterSecret
      DB_NAME: 'mbo_db_${self:provider.stage}'
    localdev:
      <<: *default_env
      stage: localdev
    dev:
      <<: *default_env
      stage: dev
    stating:
      <<: *default_env
      stage: staging
    prod:
      <<: *default_env
      stage: prod
    

provider:
  name: aws
  runtime: nodejs14.x
  stackName: MBOBackend-${opt:stage, 'localdev'}
  stage: ${opt:stage, 'localdev'} # Set the default stage used. Default is localdev
  region: ${opt:region, 'eu-west-2'} # Overwrite the default region used. Default is us-east-1
  profile: ${self:custom.profiles.${self:provider.stage}, 'mbo'}
  memorySize: 512 # Overwrite the default memory size. Default is 1024
  logRetentionInDays: 30 # Set the default RetentionInDays for a CloudWatch LogGroup
  #environment: ${self:custom.environment.${self:provider.stage}}

  iamRoleStatements:
    # Allow access to AWS Secrets mananger
    - Effect: Allow
      Sid: AllowGetDBCreds
      Action:
        - "secretsmanager:GetSecretValue"
      Resource: !Ref ClusterSecret
    # Allow access to DB Cluster
    - Effect: Allow
      Sid: GiveAccessToDataAPI
      Action:
        - "rds-data:BatchExecuteStatement"
        - "rds-data:BeginTransaction"
        - "rds-data:CommitTransaction"
        - "rds-data:ExecuteStatement"
        - "rds-data:RollbackTransaction"
      Resource: ${self:custom.DBClusterARN}

package: # Optional deployment packaging configuration
  include: # Specify the directories and files which should be included in the deployment package
    - src/**

functions:
  apiRequest:
    handler: src/handler.request
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-offline

resources:
  - ${file(cloudformation/vpc/vpc.yml)}
  - ${file(cloudformation/rds/ArouraServerless.yml)}
